From 84657f4a293dda1c58fc1d8183436c95436a3785 Mon Sep 17 00:00:00 2001
From: Francois Cartegnie <fcvlcdev@free.fr>
Date: Mon, 18 Nov 2024 13:19:27 +0700
Subject: [PATCH 1/4] dvbpsi_packet_push: compute sizes using pointer to end of
 packet

---
 src/dvbpsi.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/dvbpsi.c b/src/dvbpsi.c
index cbb7511..a11d70a 100644
--- a/src/dvbpsi.c
+++ b/src/dvbpsi.c
@@ -263,6 +263,7 @@ bool dvbpsi_packet_push(dvbpsi_t *p_dvbpsi, uint8_t* p_data)
                                              section is handled */
     int i_available;                      /* Byte count available in the
                                              packet */
+    const uint8_t *p_data_end = &p_data[188]; /* end of packet */
 
     dvbpsi_decoder_t *p_decoder = p_dvbpsi->p_decoder;
     assert(p_decoder);
@@ -355,7 +356,7 @@ bool dvbpsi_packet_push(dvbpsi_t *p_dvbpsi, uint8_t* p_data)
     }
 
     /* Remaining bytes in the payload */
-    i_available = 188 + p_data - p_payload_pos;
+    i_available = p_data_end - p_payload_pos;
 
     while (i_available > 0)
     {
@@ -395,7 +396,7 @@ bool dvbpsi_packet_push(dvbpsi_t *p_dvbpsi, uint8_t* p_data)
                         p_new_pos = NULL;
                         p_decoder->i_need = 3;
                         p_decoder->b_complete_header = false;
-                        i_available = 188 + p_data - p_payload_pos;
+                        i_available = p_data_end - p_payload_pos;
                     }
                     else
                     {
@@ -480,7 +481,7 @@ bool dvbpsi_packet_push(dvbpsi_t *p_dvbpsi, uint8_t* p_data)
                     p_new_pos = NULL;
                     p_decoder->i_need = 3;
                     p_decoder->b_complete_header = false;
-                    i_available = 188 + p_data - p_payload_pos;
+                    i_available = p_data_end - p_payload_pos;
                 }
                 else
                 {
-- 
2.48.1

