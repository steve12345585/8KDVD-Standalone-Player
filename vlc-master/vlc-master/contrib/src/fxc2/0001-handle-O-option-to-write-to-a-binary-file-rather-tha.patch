From f6c828b27699c7ee8bdd85b79ac519a13e8b3a57 Mon Sep 17 00:00:00 2001
From: Steve Lhomme <robux4@ycbcr.xyz>
Date: Fri, 19 Apr 2024 11:22:12 +0200
Subject: [PATCH 1/3] handle -O option to write to a binary file rather than a
 header

---
 fxc2.cpp | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/fxc2.cpp b/fxc2.cpp
index 205fa16..a4037af 100755
--- a/fxc2.cpp
+++ b/fxc2.cpp
@@ -79,6 +79,7 @@ int main(int argc, char* argv[])
   D3D_SHADER_MACRO* defines = new D3D_SHADER_MACRO[numDefines];
   defines[numDefines-1].Name = NULL;
   defines[numDefines-1].Definition = NULL;
+  bool outputToHeader = true;
 
   int i, c;
   static struct option longOptions[] =
@@ -92,7 +93,7 @@ int main(int argc, char* argv[])
     D3D_SHADER_MACRO* newDefines;
 
     int optionIndex = 0;
-    c = getopt_long_only (argc, argv, "T:E:D:V:F:",
+    c = getopt_long_only (argc, argv, "T:E:D:V:F:O:",
                      longOptions, &optionIndex);
 
     /* Detect the end of the options. */
@@ -156,6 +157,7 @@ int main(int argc, char* argv[])
         {
           case 'h':
             outputFile = strdup(&optarg[1]);
+            outputToHeader = true;
             if(verbose) {
               printf ("option -Fh (Output File) with arg %s\n", &optarg[1]);
             }
@@ -166,6 +168,14 @@ int main(int argc, char* argv[])
         }
         break;
 
+      case 'O':
+        outputFile = strdup(&optarg[0]);
+        outputToHeader = false;
+        if(verbose) {
+            printf ("option -O (Output File) with arg %s\n", &optarg[0]);
+        }
+        break;
+
       case '?':
       default:
         print_usage_arg();
@@ -315,8 +325,12 @@ int main(int argc, char* argv[])
     int len = output->GetBufferSize();
 
     FILE* f;
-    errno_t err = fopen_s(&f, outputFile, "w");
+    const auto openMode = outputToHeader ? "w" : "wb";
+    errno_t err = fopen_s(&f, outputFile, openMode);
 
+    if (!outputToHeader) {
+     fwrite(outString, 1, len, f);
+    } else {
     fprintf(f, "const BYTE %s[] =\n{\n", variableName);
     for (i = 0; i < len; i++) {
      fprintf(f, "%4i", outString[i]);
@@ -327,6 +341,7 @@ int main(int argc, char* argv[])
     }
 
     fprintf(f, "\n};");
+    }
     fclose(f);
 
     if(verbose) {
-- 
2.37.3.windows.1

